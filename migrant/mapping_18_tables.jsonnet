local rml = import "../mapping-generator/rml.libsonnet";

rml.mappings([
    rml.mapping(
	"EmmigrantunitsMapping",
	"emmigrantunits.csv",
	1,
	rml.templateSource(rml.datasetUri + "collection/soundtoll/{persistant_id}"),
        rml.constantSource(rml.datasetUri + "collection/soundtoll"),
	{
          "http://schema.org/orig_volgorde": rml.dataField(rml.types.string, rml.columnSource("orig_volgorde")) ,
          "http://schema.org/persoonsId": rml.dataField(rml.types.string, rml.columnSource("persoonsId")) ,
          "http://schema.org/initialen": rml.dataField(rml.types.string, rml.columnSource("initialen")) ,
          "http://schema.org/tussenvoegsel": rml.dataField(rml.types.string, rml.columnSource("tussenvoegsel")) ,
          "http://schema.org/achternaam": rml.dataField(rml.types.string, rml.columnSource("achternaam")) ,
          "http://schema.org/geboortejaar": rml.dataField(rml.types.string, rml.columnSource("geboortejaar")) ,
          "http://schema.org/hasBirthPlace": rml.dataField(rml.types.string, rml.columnSource("hasBirthPlace")) ,
          "http://schema.org/hasResidenceLocation": rml.dataField(rml.types.string, rml.columnSource("hasResidenceLocation")) ,
          "http://schema.org/hasSchema": rml.dataField(rml.types.string, rml.columnSource("hasSchema")) ,
          "http://schema.org/hasUnit": rml.dataField(rml.types.string, rml.columnSource("hasUnit")) ,
          "http://schema.org/samenstelling": rml.dataField(rml.types.string, rml.columnSource("samenstelling")) ,
          "http://schema.org/geslacht": rml.dataField(rml.types.string, rml.columnSource("geslacht")) ,
          "http://schema.org/hasReligion": rml.dataField(rml.types.string, rml.columnSource("hasReligion")) ,
          "http://schema.org/adresAantal": rml.dataField(rml.types.string, rml.columnSource("adresAantal")) ,
          "http://schema.org/eventsAantal": rml.dataField(rml.types.string, rml.columnSource("eventsAantal")) ,
          "http://schema.org/is_duplicaat": rml.dataField(rml.types.string, rml.columnSource("is_duplicaat")) ,
          "http://schema.org/duplicaten_bevatten_afwijkende_gegevens": rml.dataField(rml.types.string, rml.columnSource("duplicaten_bevatten_afwijkende_gegevens")) ,
          "http://schema.org/Heeft_geen_correct_id": rml.dataField(rml.types.string, rml.columnSource("Heeft_geen_correct_id")) ,
        }),
    rml.mapping(
	"EmcardsMapping",
	"emcards.csv",
	2,
	rml.templateSource(rml.datasetUri + "collection/soundtoll/{persistant_id}"),
        rml.constantSource(rml.datasetUri + "collection/soundtoll"),
	{
          "http://schema.org/orig_volgorde": rml.dataField(rml.types.string, rml.columnSource("orig_volgorde")) ,
          "http://schema.org/kaartnummer": rml.dataField(rml.types.string, rml.columnSource("kaartnummer")) ,
          "http://schema.org/isStoredAt": rml.dataField(rml.types.string, rml.columnSource("isStoredAt")) ,
          "http://schema.org/jaartal_begin": rml.dataField(rml.types.string, rml.columnSource("jaartal_begin")) ,
          "http://schema.org/jaartal_eind": rml.dataField(rml.types.string, rml.columnSource("jaartal_eind")) ,
          "http://schema.org/referencesPerson": rml.dataField(rml.types.string, rml.columnSource("referencesPerson")) ,
          "http://schema.org/referencesCollective": rml.dataField(rml.types.string, rml.columnSource("referencesCollective")) ,
          "http://schema.org/is_duplicaat": rml.dataField(rml.types.string, rml.columnSource("is_duplicaat")) ,
          "http://schema.org/waardes_tussen_de_duplicaten_komen_overeen": rml.dataField(rml.types.string, rml.columnSource("waardes_tussen_de_duplicaten_komen_overeen")) ,
        }),
    rml.mapping(
	"EmtravelsMapping",
	"emtravels.csv",
	3,
	rml.templateSource(rml.datasetUri + "collection/soundtoll/{persistant_id}"),
        rml.constantSource(rml.datasetUri + "collection/soundtoll"),
	{
          "http://schema.org/orig_volgorde": rml.dataField(rml.types.string, rml.columnSource("orig_volgorde")) ,
          "http://schema.org/type_reis": rml.dataField(rml.types.string, rml.columnSource("type_reis")) ,
          "http://schema.org/start": rml.dataField(rml.types.string, rml.columnSource("start")) ,
          "http://schema.org/eind": rml.dataField(rml.types.string, rml.columnSource("eind")) ,
          "http://schema.org/hasVervoermiddel": rml.dataField(rml.types.string, rml.columnSource("hasVervoermiddel")) ,
          "http://schema.org/hastravelSchema": rml.dataField(rml.types.string, rml.columnSource("hastravelSchema")) ,
          "http://schema.org/migrant": rml.dataField(rml.types.string, rml.columnSource("migrant")) ,
        }),
    rml.mapping(
	"EmwaardeoordeelsMapping",
	"emwaardeoordeels.csv",
	4,
	rml.templateSource(rml.datasetUri + "collection/soundtoll/{persistant_id}"),
        rml.constantSource(rml.datasetUri + "collection/soundtoll"),
	{
          "http://schema.org/orig_volgorde": rml.dataField(rml.types.string, rml.columnSource("orig_volgorde")) ,
          "http://schema.org/waardeoordeelemigrant": rml.dataField(rml.types.string, rml.columnSource("waardeoordeelemigrant")) ,
          "http://schema.org/PersoonsID": rml.dataField(rml.types.string, rml.columnSource("PersoonsID")) ,
          "http://schema.org/oordeel": rml.dataField(rml.types.string, rml.columnSource("oordeel")) ,
        }),
    rml.mapping(
	"EmimagesMapping",
	"emimages.csv",
	5,
	rml.templateSource(rml.datasetUri + "collection/soundtoll/{persistant_id}"),
        rml.constantSource(rml.datasetUri + "collection/soundtoll"),
	{
          "http://schema.org/orig_volgorde": rml.dataField(rml.types.string, rml.columnSource("orig_volgorde")) ,
          "http://schema.org/Image": rml.dataField(rml.types.string, rml.columnSource("Image")) ,
          "http://schema.org/kaartnummer": rml.dataField(rml.types.string, rml.columnSource("kaartnummer")) ,
        }),
    rml.mapping(
	"EmeventsMapping",
	"emevents.csv",
	6,
	rml.templateSource(rml.datasetUri + "collection/soundtoll/{persistant_id}"),
        rml.constantSource(rml.datasetUri + "collection/soundtoll"),
	{
          "http://schema.org/Image": rml.dataField(rml.types.string, rml.columnSource("Image")) ,
          "http://schema.org/migrant": rml.dataField(rml.types.string, rml.columnSource("migrant")) ,
          "http://schema.org/Prs_achternaam": rml.dataField(rml.types.string, rml.columnSource("Prs_achternaam")) ,
          "http://schema.org/actorperson": rml.dataField(rml.types.string, rml.columnSource("actorperson")) ,
          "http://schema.org/actorperson": rml.dataField(rml.types.string, rml.columnSource("actorperson")) ,
          "http://schema.org/actorinstitution": rml.dataField(rml.types.string, rml.columnSource("actorinstitution")) ,
          "http://schema.org/receptorperson": rml.dataField(rml.types.string, rml.columnSource("receptorperson")) ,
          "http://schema.org/receptorperson": rml.dataField(rml.types.string, rml.columnSource("receptorperson")) ,
          "http://schema.org/receptorinstitution": rml.dataField(rml.types.string, rml.columnSource("receptorinstitution")) ,
          "http://schema.org/recording_consulate": rml.dataField(rml.types.string, rml.columnSource("recording_consulate")) ,
          "http://schema.org/subject": rml.dataField(rml.types.string, rml.columnSource("subject")) ,
          "http://schema.org/day": rml.dataField(rml.types.string, rml.columnSource("day")) ,
          "http://schema.org/month": rml.dataField(rml.types.string, rml.columnSource("month")) ,
          "http://schema.org/year": rml.dataField(rml.types.string, rml.columnSource("year")) ,
          "http://schema.org/remark": rml.dataField(rml.types.string, rml.columnSource("remark")) ,
        }),
    rml.mapping(
	"EmactorsMapping",
	"emactors.csv",
	7,
	rml.templateSource(rml.datasetUri + "collection/soundtoll/{persistant_id}"),
        rml.constantSource(rml.datasetUri + "collection/soundtoll"),
	{
          "http://schema.org/nr": rml.dataField(rml.types.string, rml.columnSource("nr")) ,
          "http://schema.org/achternaam": rml.dataField(rml.types.string, rml.columnSource("achternaam")) ,
          "http://schema.org/voorletters": rml.dataField(rml.types.string, rml.columnSource("voorletters")) ,
          "http://schema.org/tussenvoegsel": rml.dataField(rml.types.string, rml.columnSource("tussenvoegsel")) ,
          "http://schema.org/opschrift": rml.dataField(rml.types.string, rml.columnSource("opschrift")) ,
          "http://schema.org/Naam_persoon": rml.dataField(rml.types.string, rml.columnSource("Naam_persoon")) ,
          "http://schema.org/instelling": rml.dataField(rml.types.string, rml.columnSource("instelling")) ,
          "http://schema.org/functie": rml.dataField(rml.types.string, rml.columnSource("functie")) ,
          "http://schema.org/jaar": rml.dataField(rml.types.string, rml.columnSource("jaar")) ,
          "http://schema.org/plaatsing": rml.dataField(rml.types.string, rml.columnSource("plaatsing")) ,
          "http://schema.org/bijzonderheden": rml.dataField(rml.types.string, rml.columnSource("bijzonderheden")) ,
          "http://schema.org/instelling": rml.dataField(rml.types.string, rml.columnSource("instelling")) ,
        }),
    rml.mapping(
	"EmactorinstitutionsMapping",
	"emactorinstitutions.csv",
	8,
	rml.templateSource(rml.datasetUri + "collection/soundtoll/{persistant_id}"),
        rml.constantSource(rml.datasetUri + "collection/soundtoll"),
	{
          "http://schema.org/nr": rml.dataField(rml.types.string, rml.columnSource("nr")) ,
          "http://schema.org/naam": rml.dataField(rml.types.string, rml.columnSource("naam")) ,
          "http://schema.org/functie": rml.dataField(rml.types.string, rml.columnSource("functie")) ,
          "http://schema.org/jaar": rml.dataField(rml.types.string, rml.columnSource("jaar")) ,
          "http://schema.org/plaatsing": rml.dataField(rml.types.string, rml.columnSource("plaatsing")) ,
          "http://schema.org/bijzonderheden": rml.dataField(rml.types.string, rml.columnSource("bijzonderheden")) ,
        }),
    rml.mapping(
	"LookupInstellingenMapping",
	"lookup_instellingen.csv",
	9,
	rml.templateSource(rml.datasetUri + "collection/soundtoll/{persistant_id}"),
        rml.constantSource(rml.datasetUri + "collection/soundtoll"),
	{
          "http://schema.org/naam": rml.dataField(rml.types.string, rml.columnSource("naam")) ,
          "http://schema.org/nr": rml.dataField(rml.types.string, rml.columnSource("nr")) ,
        }),
    rml.mapping(
	"EmeventtypesMapping",
	"emeventtypes.csv",
	10,
	rml.templateSource(rml.datasetUri + "collection/soundtoll/{persistant_id}"),
        rml.constantSource(rml.datasetUri + "collection/soundtoll"),
	{
          "http://schema.org/naam": rml.dataField(rml.types.string, rml.columnSource("naam")) ,
        }),
    rml.mapping(
	"EmcardcatalogsMapping",
	"emcardcatalogs.csv",
	11,
	rml.templateSource(rml.datasetUri + "collection/soundtoll/{persistant_id}"),
        rml.constantSource(rml.datasetUri + "collection/soundtoll"),
	{
          "http://schema.org/naam": rml.dataField(rml.types.string, rml.columnSource("naam")) ,
        }),
    rml.mapping(
	"EmconsulatesMapping",
	"emconsulates.csv",
	12,
	rml.templateSource(rml.datasetUri + "collection/soundtoll/{persistant_id}"),
        rml.constantSource(rml.datasetUri + "collection/soundtoll"),
	{
          "http://schema.org/naam": rml.dataField(rml.types.string, rml.columnSource("naam")) ,
        }),
    rml.mapping(
	"EmvervoermiddelsMapping",
	"emvervoermiddels.csv",
	13,
	rml.templateSource(rml.datasetUri + "collection/soundtoll/{persistant_id}"),
        rml.constantSource(rml.datasetUri + "collection/soundtoll"),
	{
          "http://schema.org/orig_volgorde": rml.dataField(rml.types.string, rml.columnSource("orig_volgorde")) ,
          "http://schema.org/vervoer": rml.dataField(rml.types.string, rml.columnSource("vervoer")) ,
          "http://schema.org/type_vervoer": rml.dataField(rml.types.string, rml.columnSource("type_vervoer")) ,
        }),
    rml.mapping(
	"EmtypevervoersMapping",
	"emtypevervoers.csv",
	14,
	rml.templateSource(rml.datasetUri + "collection/soundtoll/{persistant_id}"),
        rml.constantSource(rml.datasetUri + "collection/soundtoll"),
	{
          "http://schema.org/type_vervoer": rml.dataField(rml.types.string, rml.columnSource("type_vervoer")) ,
        }),
    rml.mapping(
	"EmschemasMapping",
	"emschemas.csv",
	15,
	rml.templateSource(rml.datasetUri + "collection/soundtoll/{persistant_id}"),
        rml.constantSource(rml.datasetUri + "collection/soundtoll"),
	{
          "http://schema.org/naam": rml.dataField(rml.types.string, rml.columnSource("naam")) ,
        }),
    rml.mapping(
	"EmlocationsMapping",
	"emlocations.csv",
	16,
	rml.templateSource(rml.datasetUri + "collection/soundtoll/{persistant_id}"),
        rml.constantSource(rml.datasetUri + "collection/soundtoll"),
	{
          "http://schema.org/naam": rml.dataField(rml.types.string, rml.columnSource("naam")) ,
        }),
    rml.mapping(
	"EmreligionsMapping",
	"emreligions.csv",
	17,
	rml.templateSource(rml.datasetUri + "collection/soundtoll/{persistant_id}"),
        rml.constantSource(rml.datasetUri + "collection/soundtoll"),
	{
          "http://schema.org/Godsdienst": rml.dataField(rml.types.string, rml.columnSource("Godsdienst")) ,
        }),
    rml.mapping(
	"OrigMapping",
	"orig.csv",
	18,
	rml.templateSource(rml.datasetUri + "collection/soundtoll/{persistant_id}"),
        rml.constantSource(rml.datasetUri + "collection/soundtoll"),
	{
          "http://schema.org/orig_volgorde": rml.dataField(rml.types.string, rml.columnSource("orig_volgorde")) ,
          "http://schema.org/Image_nr._begin": rml.dataField(rml.types.string, rml.columnSource("Image_nr._begin")) ,
          "http://schema.org/Kaartnummer_(_(prs_uuid)": rml.dataField(rml.types.string, rml.columnSource("Kaartnummer_(_(prs_uuid)")) ,
          "http://schema.org/PersoonsID": rml.dataField(rml.types.string, rml.columnSource("PersoonsID")) ,
          "http://schema.org/prs_achternaam": rml.dataField(rml.types.string, rml.columnSource("prs_achternaam")) ,
          "http://schema.org/prs_tussenvoegsel": rml.dataField(rml.types.string, rml.columnSource("prs_tussenvoegsel")) ,
          "http://schema.org/prs_initialen": rml.dataField(rml.types.string, rml.columnSource("prs_initialen")) ,
          "http://schema.org/Geboortejaar": rml.dataField(rml.types.string, rml.columnSource("Geboortejaar")) ,
          "http://schema.org/Geboorteplaats": rml.dataField(rml.types.string, rml.columnSource("Geboorteplaats")) ,
          "http://schema.org/Woonplaats_NL": rml.dataField(rml.types.string, rml.columnSource("Woonplaats_NL")) ,
          "http://schema.org/Type_vervoer": rml.dataField(rml.types.string, rml.columnSource("Type_vervoer")) ,
          "http://schema.org/Naam_vervoer": rml.dataField(rml.types.string, rml.columnSource("Naam_vervoer")) ,
          "http://schema.org/Schema_(Cat)": rml.dataField(rml.types.string, rml.columnSource("Schema_(Cat)")) ,
          "http://schema.org/Jaar_aankomst": rml.dataField(rml.types.string, rml.columnSource("Jaar_aankomst")) ,
          "http://schema.org/Kaartenbak": rml.dataField(rml.types.string, rml.columnSource("Kaartenbak")) ,
          "http://schema.org/Model": rml.dataField(rml.types.string, rml.columnSource("Model")) ,
          "http://schema.org/Info_op_kaart": rml.dataField(rml.types.string, rml.columnSource("Info_op_kaart")) ,
          "http://schema.org/jaartal_begin_info": rml.dataField(rml.types.string, rml.columnSource("jaartal_begin_info")) ,
          "http://schema.org/jaartal_eind_info": rml.dataField(rml.types.string, rml.columnSource("jaartal_eind_info")) ,
          "http://schema.org/Unit": rml.dataField(rml.types.string, rml.columnSource("Unit")) ,
          "http://schema.org/Samenstelling": rml.dataField(rml.types.string, rml.columnSource("Samenstelling")) ,
          "http://schema.org/Geslacht": rml.dataField(rml.types.string, rml.columnSource("Geslacht")) ,
          "http://schema.org/Datum_inreis": rml.dataField(rml.types.string, rml.columnSource("Datum_inreis")) ,
          "http://schema.org/jaar_re-entry": rml.dataField(rml.types.string, rml.columnSource("jaar_re-entry")) ,
          "http://schema.org/jaar_repatriering": rml.dataField(rml.types.string, rml.columnSource("jaar_repatriering")) ,
          "http://schema.org/Datum_na/terugreis": rml.dataField(rml.types.string, rml.columnSource("Datum_na/terugreis")) ,
          "http://schema.org/Godsdienst": rml.dataField(rml.types.string, rml.columnSource("Godsdienst")) ,
          "http://schema.org/Adres": rml.dataField(rml.types.string, rml.columnSource("Adres")) ,
          "http://schema.org/Life_course_NL": rml.dataField(rml.types.string, rml.columnSource("Life_course_NL")) ,
          "http://schema.org/events_(aantal_data)": rml.dataField(rml.types.string, rml.columnSource("events_(aantal_data)")) ,
          "http://schema.org/Life_course_AUS": rml.dataField(rml.types.string, rml.columnSource("Life_course_AUS")) ,
          "http://schema.org/Opvangnetwerk_(Correspondentie)": rml.dataField(rml.types.string, rml.columnSource("Opvangnetwerk_(Correspondentie)")) ,
          "http://schema.org/Opmerkingen": rml.dataField(rml.types.string, rml.columnSource("Opmerkingen")) ,
          "http://schema.org/Genoemd_kantoor_op_kaart": rml.dataField(rml.types.string, rml.columnSource("Genoemd_kantoor_op_kaart")) ,
          "http://schema.org/waardeoordeelemigrant_door_consulaat": rml.dataField(rml.types.string, rml.columnSource("waardeoordeelemigrant_door_consulaat")) ,
          "http://schema.org/Aanwezig": rml.dataField(rml.types.string, rml.columnSource("Aanwezig")) ,
          "http://schema.org/Digitaal": rml.dataField(rml.types.string, rml.columnSource("Digitaal")) ,
          "http://schema.org/Omvang_informatie": rml.dataField(rml.types.string, rml.columnSource("Omvang_informatie")) ,
          "http://schema.org/Opmerking_bij_zoeken_in_AUS": rml.dataField(rml.types.string, rml.columnSource("Opmerking_bij_zoeken_in_AUS")) ,
          "http://schema.org/Item_barcode": rml.dataField(rml.types.string, rml.columnSource("Item_barcode")) ,
          "http://schema.org/[lege_kolom]_": rml.dataField(rml.types.string, rml.columnSource("[lege_kolom]_")) ,
          "http://schema.org/orig_volgorde": rml.dataField(rml.types.string, rml.columnSource("orig_volgorde")) ,
          "http://schema.org/repatriering_van_rij": rml.dataField(rml.types.string, rml.columnSource("repatriering_van_rij")) ,
          "http://schema.org/type_reis": rml.dataField(rml.types.string, rml.columnSource("type_reis")) ,
          "http://schema.org/start": rml.dataField(rml.types.string, rml.columnSource("start")) ,
          "http://schema.org/eind": rml.dataField(rml.types.string, rml.columnSource("eind")) ,
        }),
])
